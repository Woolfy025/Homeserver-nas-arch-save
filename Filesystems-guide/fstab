# /etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a device; this may
# be used with UUID= as a more robust way to name devices that works even if
# disks are added and removed. See fstab(5).


#               *** AUTO-MOUNTED AT BOOT ***
# <file system>                           <mount point>            <type>  <options>  <dump> <pass>
UUID=       (boot partition uuid)         /boot/efi                vfat    umask=0077 0 2
UUID=      (system partition uuid)        /                        btrfs   subvol=/@,defaults 0 0
UUID=      (system partition uuid)        /home                    btrfs   subvol=/@home,defaults 0 0
UUID=      (system partition uuid)        /var/cache               btrfs   subvol=/@cache,defaults 0 0
UUID=      (system partition uuid)        /var/log                 btrfs   subvol=/@log,defaults 0 0
# User cache folder excluded from automated system snapshots
UUID=      (system partition uuid)        /home/asterix/.cache     btrfs   subvol=/@usercache,defaults,noatime,compress-force=zstd:1  0 0
# User downloads folder excluded automated from system snapshots
UUID=      (system partition uuid)        /home/asterix/Downloads  btrfs   subvol=/@downloads,x-gvfs-hide,defaults,noatime,compress-force=zstd:1  0 0
# Docker subvolume ~ automount
UUID=      (system partition uuid)        /home/asterix/docker     btrfs   subvol=@docker,x-gvfs-hide,defaults,noatime,compress-force=zstd:1  0  0


# Data pool ~ automount
UUID=        (media drive uuid)           /mnt/pool/media          btrfs   defaults,noatime,compress=zstd:1 0 0
UUID=        (users drive uuid)           /mnt/pool/users          btrfs   defaults,noatime,compress-force=zstd:3 0 0


#              *** NOT AUTOMATICALLY MOUNTED *** (only for backups, drive maintenance etc)
# System drive root ~ mount on-demand only                        
UUID=      (system partition uuid)        /mnt/drives/system       btrfs   subvolid=5,defaults,noatime,noauto  0  0

# Online backup drives ~ mount on-demand only
UUID=      (backup drive 1 uuid)          /mnt/drives/backup1      btrfs   defaults,noatime,noauto,compress-force=zstd:8 0 0

# Offline backup drives (USB) ~ mount on-demand only
UUID=      (backup drive 2 uuid)          /mnt/drives/backup2      btrfs  defaults,noatime,noauto,compress-force=zstd:8 0 0
UUID=      (backup drive 3 uuid)          /mnt/drives/backup3      btrfs  defaults,noatime,noauto,compress-force=zstd:8 0 0


#   *** EXAMPLES FOR MERGERFS, SNAPRAID, NFS NETWORK SHARE ***

# MERGERFS, pool multiple drives, mount on /mnt/pool, fill up the first disk, then the second, then the 3rd etc ("category.create =eplfs", always choosing the drive with the LEAST FREE SPACE, unless its folder already existed on another drive). 
# Note if you want to use a fast cache drive, use this mountpoint as your "no-cache" mountpoint (call it /mnt/nocache-pool), to be able to offload the cache drive to the rest of your pool!
/mnt/drives/data1:/mnt/drives/data2:/mnt/drives/data3 /mnt/pool fuse.mergerfs allow_other,cache.files=auto-full,dropcacheonclose=true,cache.readdir=true,cache.statfs=true,cache.symlinks=true,cache.entry=3,cache.attr=3,cache.negative_entry=2,use_ino,category.create=eplfs,moveonenospc=true,minfreespace=100G,fsname=mergerfsPool  0 0

# MERGERFS, use a fast cache drive in your pool, to write to first. Cachedrive needs to be the smallest drive in the pool. (create policy needs to be `lfs` to ensure data goes to smallest drive, the cache drive)
/mnt/drives/cache:/mnt/drives/data1:/mnt/drives/data2:/mnt/drives/data3 /mnt/pool fuse.mergerfs allow_other,cache.files=auto-full,dropcacheonclose=true,cache.readdir=true,cache.statfs=true,cache.symlinks=true,cache.entry=3,cache.attr=3,cache.negative_entry=2,use_ino,category.create=lfs,moveonenospc=true,minfreespace=200G,fsname=mergerfsPool  0 0

# PARITY ~ parity drives for Snapraid. 1 parity drive can protect up to 4 datadrives (but only a single subvolume per drive). 
UUID=                                     /mnt/drives/parity1       ext4   defaults,noatime,noauto 0 0


# NFS ~ home network shares  
# -------------------------
# NFSv4.2 requires a root folder with each shared folder in it. We create /srv/nfs and bind mount the shared folders.
/mnt/pool/Media /srv/nfs/Media none rbind 0 0
#
# Client side: example how the mount looks like for your client devices:
# 192.168.88.X:  /mnt/Y  nfs4  nfsvers=4,minorversion=2,proto=tcp,fsc,nocto  0  0
